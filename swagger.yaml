swagger: "2.0"
info:
  title: Fenix Bookstore
  version: 0.0.1
  description: 使用基于Flask的单体架构实现《凤凰架构：构建可靠的大型分布式系统》一书中的Fenix's BookStore网站
host: localhost
basePath: /v1
schemes:
  - http
paths:
  /index:
    get:
      tags:
        - Index
      produces:
        - text/html; charset=utf-8
      responses:
        "200":
          description: 成功返回Index页面
          headers:
            Content-Type:
              type: string
          schema:
            type: file
        "404":
          description: 找不到Index页面
  /advertisements:
    get:
      tags:
        - Advertisements
      produces:
        - application/json
      responses:
        "200":
          description: 成功返回广告轮播图
          schema:
            $ref: "#/definitions/advertisementsModel"
  /products:
    get:
      tags:
        - Products
      produces:
        - application/json
      responses:
        "200":
          description:
            返回所有书本
          schema:
            type: array
            items:
              $ref: "#/definitions/productModel"
  /products/{productId}:
    get:
      tags:
        - Product
      produces:
        - application/json
      parameters:
        - in: path
          type: integer
          name: productId
          required: True
      responses:
        "200":
          description: 按编号返回书本详情信息
          schema:
            $ref: "#/definitions/productModel"
        "404":
          description: 编号指定的书本不存在
  /accounts:
    post:
      tags: 
        - Accounts
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: userInfo
          schema:
            example:
              username: buglib
              email: buglib@foxmail.com
              password: 5hV62VD9mMbvRKthI563w8tTJs4VHFy
              telephone: '12345665431'
            type: object
            required:
              - username
              - email
              - password
              - telephone
            properties:
              username:
                type: string
              email:
                type: string
              password:
                type: string
              telephone:
                type: string
      responses:
        "200":
          description: 成功创建新用户
          schema:
            type: object
            example:
              code: 0
              message: 操作已成功
            properties:
              code:
                type: integer
              message:
                type: string
        "400":
          description: 用户已存在
          schema:
            type: object
            example:
              code: 0
              message: 操作失败，用户已存在
            properties:
              code:
                type: integer
              message:
                type: string
  /accounts/{username}:
    get:
      tags:
        - Account
      produces:
        - application/json
      parameters:
        - name: username
          in: path
          type: string
          required: True
      responses:
        "200":
          description: 成功返回用户个人跟信息
          schema:
            example:
              id: 1
              username: icyfenix
              name: 周志明
              avatar: ''
              telephone: '18888888888'
              email: icyfenix@gmail.com
              location: 唐家湾港湾大道科技一路3号远光软件股份有限公司
            properties:
              id:
                type: integer
              username:
                type: string
              name:
                type: string
              avatar:
                type: string
              telephone:
                type: string
              email:
                type: string
              location:
                type: string
        "404":
          description: 按用户名查找用户失败，即用户不存在
          schema:
            example:
              code: -1
              message: 按用户名查找用户失败，即用户不存在
            type: object
            properties:
              code: 
                type: integer
              message:
                type: string
  /oauth/token:
    get:
      tags:
        - Authentication
      produces:
        - application/json
      parameters:
        # http://localhost:8080/oauth/token?username=bookstore&password=hAmwR4328X7eKmrZzQTqJQcS6DxONeq&grant_type=password&client_id=bookstore_frontend&client_secret=bookstore_secret
        - in: query
          name: username
          type: string
          required: False
        - in: query
          name: password
          type: string
          required: False
        - in: query
          name: refresh_token
          type: string
          required: False
          description: 如果该字段为空，则用户名和密码不能同时为空
        - in: query
          name: grant_type
          type: string
          required: True
        - in: query
          name: client_id
          type: string
          required: True
        - in: query
          name: client_secret
          type: string
          required: True
      responses:
        "200":
          description: 成功获得令牌
          schema:
            $ref: "#/definitions/tokenModel"
        "404":
          description: 用户不存在
          schema:
            type: object
            properties:
              status:
                type: string
                description: 操作状态
                example: Fail to get access token
              message:
                type: string
                description: 操作状态详述
                example: User 'Messi' not found
        "400":
          description: 请求参数有误，例如密码错误，认证授权模式有误
          schema:
            type: object
            properties:
              status:
                type: string
                description: 操作状态
                example: Fail to get access token
              message:
                type: string
                description: 操作状态详述
                example: 
                  - Invalid password for user 'Messi'
                  - Grant type must be password
                  - Invalid client id for user 'Messi'
                  - Invalid client secret for user 'Messi'
definitions:
  advertisementsModel:
    type: array
    items:
      type: object
      properties:
        id:
          type: integer
        image:
          type: string
          description: 广告轮播图中某书本的图片URL
          example: /static/carousel/fenix2.png
        productId:
          type: integer
  productModel:
    type: object
    properties:
      id:
        type: integer
        description: 书本编号
      title:
        type: string
        description: 书名
      price:
        type: number
        description: 书本价格
      rate:
        type: number
        description: 优惠折扣
      description:
        type: string
        description: 书本描述
      cover:
        type: string
        description: 书本封面页图片链接
      detail:
        type: string
        description:
          书本详情图片链接
      specifications:
        type: array
        items:
          type: object
          properties:
            id:
              type: integer
              description: 书本规格属性编号
            item:
              type: string
              description: 书本规格属性名称
            value:
              type: string
              description: 书本规格属性值
  tokenModel:
    type: object
    example:
      access_token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX25hbWUiOiJpY3lmZW5peCIsInNjb3BlIjpbIkFMTCJdLCJleHAiOjE1ODQyNTA3MDQsImF1dGhvcml0aWVzIjpbIlJPTEVfVVNFUiIsIlJPTEVfQURNSU4iXSwianRpIjoiMTNmNGNlMWQtNmY2OC00NzQxLWI5YzYtMzkyNzU1OGQ5NzRlIiwiY2xpZW50X2lkIjoiYm9va3N0b3JlX2Zyb250ZW5kIiwidXNlcm5hbWUiOiJpY3lmZW5peCJ9.82awQU4IcLVXr7w6pxcUCWrcEHKq-LRT7ggPT_ZPhE0
      token_type: bearer
      refresh_token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX25hbWUiOiJpY3lmZW5peCIsInNjb3BlIjpbIkFMTCJdLCJhdGkiOiIxM2Y0Y2UxZC02ZjY4LTQ3NDEtYjljNi0zOTI3NTU4ZDk3NGUiLCJleHAiOjE1ODU1MzU5MDQsImF1dGhvcml0aWVzIjpbIlJPTEVfVVNFUiIsIlJPTEVfQURNSU4iXSwianRpIjoiY2IwN2ZjZjEtMjViZS00MDRjLTkwNzctY2U5ZTlhZjFjOWEwIiwiY2xpZW50X2lkIjoiYm9va3N0b3JlX2Zyb250ZW5kIiwidXNlcm5hbWUiOiJpY3lmZW5peCJ9.-gNKkhspN1XfVybmS3Rnz2AYFdteZN4kvdEmC4g-aYk
      expires_in: 10799
      scope: ALL
      authorities:
        - ROLE_USER
        - ROLE_ADMIN
      username: icyfenix
      jti: 13f4ce1d-6f68-4741-b9c6-3927558d974e
    properties:
      access_token:
        type: string
        description: 访问令牌
      token_type:
        type: string
        description: 令牌类型
      refresh_token:
        type: string
        description: 刷新令牌
      expires_in:
        type: integer
        description: 令牌过期时间
      scope:
        type: string
        description: 许可时间
      authorities:
        type: array
        items:
          type: string
          description: 授予的权限
      username:
        type: string
        description: 申请认证者
      jti:
        type: string
        description: JWT标识符